#include  "bsp.h"

              MODULE HAL
              PUBLIC SysConfig,Print2LEDs,ClrLEDs,ReadSWs,PBs_handler,delay,Delay500msec 
              EXTERN GPIOconfig,TIMERconfig,ADCconfig,state0
              EXTERN state
            
              RSEG   CODE
;--------------------------------------------------------------------
;             System Configuration  
;--------------------------------------------------------------------
SysConfig     call #GPIOconfig
              call #TIMERconfig
              call #ADCconfig
              ret
;--------------------------------------------------------------------
;Print LEDs - function only with argument (without return value)  
;--------------------------------------------------------------------
Print2LEDs    pop   R4        ; save return address
              pop   R5        ; get value to print
               
              mov.b R5,LEDsArrPort ;function body
              
              push.w  R4
              ret   
;--------------------------------------------------------------------
;Clear LEDs - void function (without arguments and return value)
;--------------------------------------------------------------------
ClrLEDs       clr.b LEDsArrPort
              ret                 
;--------------------------------------------------------------------
;Read SWs -  function, without arguments and return value --- not relevant rn
;--------------------------------------------------------------------
ReadSWs      pop     R4        ; save return address

             mov.b   PBsArrPort,R5 ;function body
             and.b   #SWmask,R5
             push.w  R5            ;function body end
             
             push.w  R4
             ret
;----------------------------------------------------------------------- 
;            PORT2 Interrupt Service Routine
;-----------------------------------------------------------------------
PBs_handler  push.w #debounceVal
             call   #delay    
             bit.b  #PB0,PBsArrIntPend   ;check if PB0 is pushed
             jnz    PB0sel 
             bit.b  #PB1,PBsArrIntPend   ;check if PB1 is pushed
             jnz    PB1sel
             bit.b  #PB2,PBsArrIntPend   ;check if PB2 is pushed
             jnz    PB2sel
             reti                ; interrupt hapened from another source
             
PB0sel       mov    #1,state 
             mov    #PB0,R4     ; which IntPend to clear
             jmp    exitLPM0
PB1sel       mov    #2,state
             mov    #PB1,R4     ; which IntPend to clear
             jmp    exitLPM0
PB2sel       mov    #3,state    ; idle state
             mov    #PB2,R4     ; which IntPend to clear

exitLPM0     bic    #CPUOFF+GIE,0(SP)  ; Exit LMP0, disable gie
             bic.b  R4,PBsArrIntPend
             
            
             bic.b    #10000000b,PBsArrPortout
             pop    R7
             POP    R8
             PUSH.W #state0
             PUSH.W R7
             
             reti
;----------------------------------------------------------------------------------------------
;            Polling based Delay function
;----------------------------------------------------------------------------------------------                     
delay        pop   R15        ; save return address
             pop   R5        ; get delay value
             
L            dec.w   R5      ;function body begin                 
             jnz     L       ;function body end
             
             push.w  R15
             ret
             
Delay500msec    pop     R4       ; save return address
                mov.w   #6,R14              
L2              mov     #29115, R5
L3              dec.w   R5      ;function body begin                 
                jnz     L3      ;function body end 
                dec     R14
                jnz     L2
                push    R4       ; push return address
                ret                  
;----------------------------------------------------------------------------------------------
             ENDMOD
             END


 